
/*

    The Grid

*/

// Reset
*, *:after, *:before {
    margin: 0;
    padding: 0;
    @include border-box;
}

img {
    width: auto;
    max-width: 100%;
    height: auto;
}

.#{$grid-prefix}#{$grid-wrapper-name}-fluid {
  width: 100%;
  margin: 0 auto;
}
.#{$grid-prefix}#{$grid-wrapper-name} {
  @extend .#{$grid-prefix}#{$grid-wrapper-name}-fluid;
  max-width: $grid-max-width;
}

.#{$grid-prefix}#{$grid-wrapper-name},
.#{$grid-prefix}#{$grid-row-name} {
    @extend %clearfix;
}

.#{$grid-prefix}#{$grid-row-name} {
  @include media-min($grid-margins-from) {
    margin-right: -$grid-col-padding;
    margin-left: -$grid-col-padding;
  }
}

[class*='#{$grid-prefix}#{$grid-col-name}-'] {
    float: left;
    padding: $grid-col-padding;
    width: 100%;
    min-height: 1px;
}

@each $bp in $grid-breakpoints {
    $bp_name: nth($bp, 1);
    $bp_size: nth($bp, 2);

    @media (min-width: $bp_size) {
        @for $i from 1 through $grid-columns {
            .#{$grid-prefix}#{$grid-col-name}-#{$bp_name}-#{$i} {
                width: 100% / $grid-columns * $i;
            }
        }
    }

    @include media-is($bp_name) {
      $grid-display-types: block inline-block inline;
      @each $display-type in $grid-display-types {
        .visible-#{$bp_name}-#{$display-type} {
          display: #{$display-type} !important;
        }
      }

      .hidden-#{$bp_name} {
        display: none !important;
      }

      $grid-align-types: center left right;
      @each $align-type in $grid-align-types {
        .text-#{$bp_name}-#{$align-type} {
          text-align: #{$align-type} !important;
        }
      }
    }
}
/*
 ----------- END OF GRID --------------
*/
